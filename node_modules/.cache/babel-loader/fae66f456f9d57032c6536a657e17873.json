{"ast":null,"code":"import _classCallCheck from \"E:\\\\react_study\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\react_study\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\react_study\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\react_study\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\react_study\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\react_study\\\\todo\\\\src\\\\List.js\";\nimport React, { Component, Fragment } from 'react';\nimport Todo from './Todo';\nimport Filter from './Filter';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.filterShow = function (whatToShow) {\n      _this.setState({\n        showWhat: whatToShow\n      });\n\n      _this.props.onFilter(whatToShow);\n    };\n\n    _this.state = {\n      showList: _this.props.data,\n      showWhat: 'all'\n    };\n    _this.complete = _this.props.data.filter(function (todo) {\n      return todo.state === true;\n    });\n    _this.doit = _this.props.data.filter(function (todo) {\n      return todo.state === false;\n    });\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          onRemove = _this$props.onRemove,\n          onComplete = _this$props.onComplete,\n          onFilter = _this$props.onFilter,\n          showWhat = _this$props.showWhat,\n          onEdit = _this$props.onEdit,\n          onCreate = _this$props.onCreate; // this.showWhat = this.state.showWhat;\n\n      var abotFilter = this.state.showWhat.abotFilter;\n      var list = data.map(function (todo) {\n        return React.createElement(Todo, {\n          key: todo.id,\n          todo: todo,\n          onRemove: onRemove,\n          onComplete: onComplete,\n          onEdit: onEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n      var filter = this.state.showWhat;\n      var listAll = list;\n      var listdoit = this.doit.map(function (todo) {\n        return React.createElement(Todo, {\n          key: todo.id,\n          todo: todo,\n          onRemove: onRemove,\n          onComplete: onComplete,\n          onEdit: onEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n      var listComplete = this.complete.map(function (todo) {\n        return React.createElement(Todo, {\n          key: todo.id,\n          todo: todo,\n          onRemove: onRemove,\n          onComplete: onComplete,\n          onEdit: onEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      });\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"todoList_wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, // listAll\n      function () {\n        if (filter === 'all') return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, listAll);\n        if (filter === 'complete') return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, listComplete);\n        if (filter === 'doit') return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, listdoit);\n      }()), React.createElement(Filter, {\n        onFilter: this.filterShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nList.defaultProps = {\n  showWhat: 'all',\n  data: [],\n  onRemove: function onRemove() {\n    return console.warn('onRemove not defined');\n  },\n  onComplete: function onComplete() {\n    return console.warn('onComplete not definde');\n  },\n  onFilter: function onFilter() {\n    return console.warn('onFilter not definde');\n  }\n};\nexport default List;","map":{"version":3,"sources":["E:\\react_study\\todo\\src\\List.js"],"names":["React","Component","Fragment","Todo","Filter","List","props","filterShow","whatToShow","setState","showWhat","onFilter","state","showList","data","complete","filter","todo","doit","onRemove","onComplete","onEdit","onCreate","abotFilter","list","map","id","listAll","listdoit","listComplete","defaultProps","console","warn"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Todo from './Todo';\r\nimport Filter from './Filter';\r\n\r\nclass List extends Component {\r\n\r\n  static defaultProps = {\r\n    showWhat: 'all',\r\n    data: [],\r\n    onRemove: () => console.warn('onRemove not defined'),\r\n    onComplete: () => console.warn('onComplete not definde'),\r\n    onFilter: () => console.warn('onFilter not definde')\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showList: this.props.data,\r\n      showWhat: 'all'\r\n    }\r\n    \r\n    this.complete = this.props.data.filter( todo => todo.state === true );\r\n    this.doit = this.props.data.filter( todo => todo.state === false );\r\n  }\r\n\r\n  filterShow = (whatToShow) => {\r\n    this.setState({\r\n      showWhat: whatToShow\r\n    });\r\n    this.props.onFilter(whatToShow);\r\n  }\r\n\r\n  render() {\r\n    const { data, onRemove, onComplete, onFilter, showWhat, onEdit, onCreate } = this.props;\r\n    // this.showWhat = this.state.showWhat;\r\n    const { abotFilter } = this.state.showWhat;\r\n    const list = data.map(\r\n      todo => (\r\n        <Todo \r\n          key={todo.id}\r\n          todo={todo} \r\n          onRemove={onRemove}\r\n          onComplete={onComplete}\r\n          onEdit={onEdit} />\r\n      )\r\n    );\r\n\r\n    const filter = this.state.showWhat;\r\n    const listAll = list;\r\n    const listdoit = this.doit.map(\r\n      todo => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo} \r\n          onRemove={onRemove}\r\n          onComplete={onComplete}\r\n          onEdit={onEdit} />\r\n      )\r\n    );\r\n    const listComplete = this.complete.map(\r\n      todo => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo} \r\n          onRemove={onRemove}\r\n          onComplete={onComplete}\r\n          onEdit={onEdit} />\r\n      )\r\n    );\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"todoList_wrap\">\r\n          {\r\n            // listAll\r\n            (function() {\r\n              if(filter === 'all') return (<div>{listAll}</div>);\r\n              if(filter === 'complete') return (<div>{listComplete}</div>);\r\n              if(filter === 'doit') return (<div>{listdoit}</div>);\r\n            })()\r\n          }\r\n        </div>\r\n        <Filter\r\n          onFilter={this.filterShow} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}