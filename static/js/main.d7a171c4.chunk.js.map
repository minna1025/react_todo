{"version":3,"sources":["Header.js","Textwrap.js","Todo.js","List.js","Filter.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","this","props","name","Component","Textwrap","state","doSomething","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","textBox","document","getElementById","undefined","alert","onCreate","onSubmit","id","type","placeholder","onChange","Todo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleRemove","_this$props","todo","onRemove","handleComplete","edit","onComplete","showEdit","handleEdit","onEdit","react","className","onClick","defaultProps","List","filterShow","whatToShow","showWhat","onFilter","showList","data","list","listItem","map","src_Todo","key","console","warn","Filter","showAll","filterdoit","filterComplete","active","filter","App","whatUdo","handleCreate","concat","assign","objectSpread","complete","doit","src_Header","src_Textwrap","src_List","src_Filter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7a171c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>{this.props.name}</header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Textwrap extends Component {\r\n\r\n  state = {\r\n    doSomething: '',\r\n    state: false\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      doSomething: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const textBox = document.getElementById('textBox');\r\n    if( textBox.value === '' || textBox.value === undefined ){\r\n      alert('뭐라도 좀 쓰시지?!');\r\n      return false;\r\n    }\r\n\r\n    this.props.onCreate(this.state);\r\n    this.setState({\r\n      doSomething: '',\r\n      state: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input \r\n          id=\"textBox\"\r\n          type=\"text\"\r\n          placeholder=\"What will U do?\"\r\n          onChange={this.handleChange}\r\n          value={this.state.doSomething} />\r\n        <button id=\"btn_add\" type=\"submit\">ADD</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Textwrap;","import React, { Component, Fragment } from 'react';\r\n\r\nclass Todo extends Component {\r\n  static defaultProps = {\r\n    todo: {\r\n      name: '뭐할건뎅?',\r\n      id: 0,\r\n      state: false\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      edit: false,\r\n      doSomething: '',\r\n      state: false\r\n    }\r\n  }\r\n\r\n  handleRemove = () => {\r\n    const { todo, onRemove } = this.props;\r\n    onRemove(todo.id);\r\n  }\r\n\r\n  handleComplete = () => {\r\n    if ( !this.state.edit ){\r\n      this.props.todo.state = !this.props.todo.state;\r\n      const { onComplete } = this.props;\r\n      onComplete( this.props.todo.id, this.props.todo );\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      doSomething: e.target.value\r\n    });\r\n  }\r\n\r\n  showEdit = () => {\r\n    this.setState({\r\n      edit: !this.state.edit\r\n    });\r\n  }\r\n\r\n  handleEdit = (e) => {\r\n    e.preventDefault();\r\n    const { onEdit } = this.props;\r\n    this.setState({\r\n      doSomething: '',\r\n      edit: !this.state.edit\r\n    });\r\n    onEdit( this.props.todo.id, this.state );\r\n  }\r\n\r\n  render() {\r\n    const { doSomething } = this.props.todo;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className={ this.props.todo.state && !this.state.edit ? 'todo_item complete' : 'todo_item'} onClick={this.handleComplete}>\r\n          {\r\n            this.state.edit !== false \r\n            ? ( \r\n                <form onSubmit={this.handleEdit}>\r\n                  <input \r\n                    type=\"text\"\r\n                    placeholder=\"Show me what will U do?\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.doSomething} />\r\n                  <button id=\"btn_add\" type=\"submit\">EDIT</button>\r\n                </form>\r\n              ) \r\n            : doSomething\r\n          }\r\n        </div>\r\n        {\r\n          !this.props.todo.state && <div onClick={this.showEdit} className=\"edit\"></div>\r\n        }\r\n        <div onClick={this.handleRemove} className=\"trash\"></div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport Todo from './Todo';\r\n\r\nclass List extends Component {\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n    onComplete: () => console.warn('onComplete not definde'),\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showList: this.props.data,\r\n    }\r\n  }\r\n\r\n  filterShow = (whatToShow) => {\r\n    this.setState({\r\n      showWhat: whatToShow\r\n    });\r\n    this.props.onFilter(whatToShow);\r\n  }\r\n\r\n  render() {\r\n    const { onRemove, onComplete, onEdit } = this.props;\r\n    const data = this.props.listItem;\r\n    \r\n    const list = data.map(\r\n      todo => (\r\n        <Todo \r\n          key={todo.id}\r\n          todo={todo} \r\n          onRemove={onRemove}\r\n          onComplete={onComplete}\r\n          onEdit={onEdit} />\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div className=\"todoList_wrap\">\r\n        { list }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\n\r\nclass Filter extends Component {\r\n  static defaultProps = {\r\n    filter: {\r\n      showList: [],\r\n      showWhat: 'all'\r\n    }\r\n  }\r\n\r\n  showAll = () => {\r\n    const { onFilter } = this.props;\r\n    onFilter('all');\r\n  }\r\n\r\n  filterdoit = () => {\r\n    const { onFilter } = this.props;\r\n    onFilter('doit');\r\n  }\r\n\r\n  filterComplete = () => {\r\n    const { onFilter } = this.props;\r\n    onFilter('complete');\r\n  }\r\n\r\n  render() {\r\n    const active = this.props.active;\r\n    return(\r\n      <ul className=\"filterList\" id='filterList'>\r\n        {\r\n          active === 'all'\r\n            ? (<li onClick={this.showAll} className=\"active\">ALL</li>)\r\n            : (<li onClick={this.showAll}>ALL</li>)\r\n        }\r\n        \r\n        {\r\n          active === 'doit'\r\n            ? (<li onClick={this.filterdoit} className=\"active\">Do it!</li>)\r\n            : (<li onClick={this.filterdoit}>Do it!</li>)\r\n        }\r\n        \r\n        {\r\n          active === 'complete'\r\n            ? (<li onClick={this.filterComplete} className=\"active\">DONE!</li>)\r\n            : (<li onClick={this.filterComplete}>DONE!</li>)\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Textwrap from './Textwrap';\r\nimport List from './List';\r\nimport Filter from './Filter';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  id = 3;\r\n\r\n  state = {\r\n    showWhat: 'all',\r\n    whatUdo: [\r\n      {\r\n        id:0,\r\n        doSomething: 'test',\r\n        state: false\r\n      },\r\n      {\r\n        id:1,\r\n        doSomething: 'complete test',\r\n        state: true\r\n      },\r\n      {\r\n        id:2,\r\n        doSomething: 'list test',\r\n        state: false\r\n      }\r\n    ]\r\n  }\r\n\r\n  handleCreate = (data) => {\r\n    const { whatUdo } = this.state;\r\n    this.setState({\r\n      whatUdo: whatUdo.concat(Object.assign({}, data, {\r\n        id:this.id++\r\n      }))\r\n    });\r\n  }\r\n\r\n  handleRemove = (id) => {\r\n    const { whatUdo } = this.state;\r\n    this.setState({\r\n      whatUdo: whatUdo.filter( todo => todo.id !== id )\r\n    });\r\n  }\r\n\r\n  handleComplete = (id,data) => {\r\n    const { whatUdo } = this.state;\r\n    this.setState({\r\n      whatUdo: whatUdo.map(\r\n        todo => todo.id === id\r\n          ? {...todo, ...data}\r\n          : todo\r\n      )\r\n    });\r\n  }\r\n\r\n  handleEdit = (id,data) => {\r\n    const { whatUdo } = this.state;\r\n    this.setState({\r\n      whatUdo: whatUdo.map(\r\n        todo => todo.id === id\r\n          ? {...todo, ...data}\r\n          : todo\r\n      )\r\n    });\r\n  }  \r\n\r\n  filterShow = (whatToShow) => {\r\n    this.setState({\r\n      showWhat: whatToShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const list = this.state.whatUdo;\r\n    const showWhat = this.state.showWhat;\r\n    const complete = list.filter( todo => todo.state === true );\r\n    const doit = list.filter( todo => todo.state === false );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header name=\"TO DO\" />\r\n        <Textwrap\r\n          onCreate={this.handleCreate} />\r\n        <List \r\n          data={this.state.whatUdo}\r\n          onRemove={this.handleRemove}\r\n          onComplete={this.handleComplete}\r\n          onEdit={this.handleEdit}\r\n          listItem={\r\n            (function() {\r\n              if( showWhat === 'all' ) return (list);\r\n              if( showWhat === 'doit' ) return (doit);\r\n              if( showWhat === 'complete' ) return (complete);\r\n            })()\r\n          } />\r\n        <Filter\r\n          onFilter={this.filterShow}\r\n          active={this.state.showWhat} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}